package com.vti.FacebookDemo.backend.datalayer;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.vti.FacebookDemo.entity.User;
import com.vti.FacebookDemo.utils.JDBCUtils;

public class Repository implements IRepository {

	private JDBCUtils jdbcUtils;
	
	public Repository() throws FileNotFoundException, IOException {
		jdbcUtils = new JDBCUtils();
	}

	public boolean logIn(String userName, String password) throws ClassNotFoundException, SQLException {
		jdbcUtils.connect();
		Connection connection = jdbcUtils.getConnection();
		String sql =	"SELECT id FROM `user` "
				+ 		"WHERE username = ? AND password = ?";
		PreparedStatement pre = connection.prepareStatement(sql);
		pre.setString(1, userName);
		pre.setString(2, password);
		ResultSet resultSet = pre.executeQuery();
		while(resultSet.next()){
			System.out.println("Log In Successfully !");
			return true;
		}
		System.out.println("Fail To Log In !");
		return false;
	}

	public List<User> showListFriendById(int id) throws ClassNotFoundException, SQLException {
		List<User> friends = new ArrayList<User>();
		jdbcUtils.connect();
		Connection connection = jdbcUtils.getConnection();
		String sql =	"SELECT * FROM `user` " + 
						"WHERE id IN (SELECT id FROM relationship WHERE id_partner = ? UNION ALL SELECT id_partner FROM relationship WHERE ID = ? )";
		PreparedStatement pre = connection.prepareStatement(sql);
		pre.setInt(1, id);
		pre.setInt(2, id);
		ResultSet result = pre.executeQuery();
		while(result.next()){
			friends.add(new User(result.getInt(1), result.getString(2), result.getString(3)));
		}
		System.out.println("The number of friend : " + friends.size());
		return friends;
	}

	public List<User> AmountUserMessageWith(int userId, int amount) throws ClassNotFoundException, SQLException {
		List<User> friends = new ArrayList<User>();
		jdbcUtils.connect();
		Connection connection = jdbcUtils.getConnection();
		String sql =	"SELECT *  FROM `user` " + 
						"WHERE id IN (	SELECT sender_id AS id " +
										"FROM	(SELECT sender_id, `time` FROM message WHERE reveiver_id = ? " + 
												"UNION ALL " +
												"SELECT reveiver_id, `time` FROM message WHERE sender_id = ? " +
												"ORDER BY `time` DESC ) AS A " +
										"GROUP BY id )";
		PreparedStatement pre = connection.prepareStatement(sql);
		pre.setInt(1, userId);
		pre.setInt(2, userId);
		ResultSet result = pre.executeQuery();
		int i = 0;
		while(result.next() && i < amount){
			User user = new User(result.getInt(1), result.getString(2), result.getString(3));
			friends.add(user);
			i++;
		}

		return null;
	}

	

}
